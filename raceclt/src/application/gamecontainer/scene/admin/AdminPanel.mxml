<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" implements="utils.interfaces.ISceneContent"
		 xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="100%" initialize="onInit(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx" left="40" right="40" top="20" bottom="10" xmlns:button="application.components.button.*" xmlns:buttonswf="application.components.buttonswf.*" xmlns:minigames="application.gamecontainer.scene.minigames.*" xmlns:input="application.gamecontainer.chat.input.*">
	<fx:Script>
		<![CDATA[
			import application.GameApplication;
			
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			import utils.interfaces.ISceneContent;
			import utils.managers.admin.ParamType;
			import utils.parser.Parser;
			import utils.protocol.ProtocolKeys;
			import utils.protocol.ProtocolValues;
			
			protected function onBack(event:MouseEvent):void{
				GameApplication.app.navigator.goHome();
			}
			
			public function onHide():void{				
			}

			protected function onUpdateAllUsers(event:MouseEvent):void
			{
				GameApplication.app.adminmanager.updateAllUsersParams();
			}


			protected function setParam(event:MouseEvent):void
			{
				if(int(params.selectedItem.data) == ParamType.NAME){
					GameApplication.app.adminmanager.setNameParam(int(userID.text), params.selectedItem.data, (paramValue.text));
				}else{
					GameApplication.app.adminmanager.setParam(int(userID.text), params.selectedItem.data, int(paramValue.text));
				}
			}
			
			protected function setModerator(event:MouseEvent):void
			{
				GameApplication.app.adminmanager.setModerator(int(userID.text));
			}
			
			protected function deleteModerator(event:MouseEvent):void
			{
				GameApplication.app.adminmanager.deleteModerator(int(userID.text));
			}
			
			protected function deleteUser(event:MouseEvent):void
			{
				GameApplication.app.adminmanager.deleteUser(int(userID.text));
			}

			protected function onInit(event:FlexEvent):void
			{
				userID.text = String(GameApplication.app.adminmanager.lastUserID);
				GameApplication.app.callsmanager.call(ProtocolValues.GET_CHEATER_LIST, onGetCheaterList);
			}

			private function onGetCheaterList(value:Object):void{
				Parser.parseCheaters(value[ProtocolKeys.USERS]);
			}

			protected function showInfo(event:MouseEvent):void
			{
				GameApplication.app.adminmanager.showInfo(int(userID.text));
			}


			protected function sendNotification(event:MouseEvent):void
			{
				GameApplication.app.adminmanager.sendNotification(notification.text);
			}

		]]>
	</fx:Script>
	<s:Rect width="100%" height="100%" radiusX="30" radiusY="30">
		<s:fill>
			<s:SolidColor color="0x000000" alpha=".5"/>
		</s:fill>
	</s:Rect>
	<s:VGroup width="100%" height="100%" paddingLeft="20" paddingRight="20" paddingTop="10" paddingBottom="10">		
		<s:Label width="100%" textAlign="center" text="Панель администратора" fontSize="30" color="0xffffff" fontWeight="bold" fontStyle="italic"/>
		<s:VGroup width="100%" height="100%" verticalAlign="top" horizontalAlign="left">
			<s:HGroup verticalAlign="middle">
				<s:Label text="ID:" color="0xffffff" fontSize="14" fontWeight="normal"/>
				<input:InputText id="userID" maxChars="8" width="60"/>
				<button:GameButton label="информация" click="showInfo(event)"/>
				<mx:ComboBox id="params"> 
					<mx:ArrayCollection>
						<fx:Object label="деньги" data="{ParamType.MONEY}"/>
						<fx:Object label="опыт" data="{ParamType.EXPERIENCE}"/>
						<fx:Object label="популярность" data="{ParamType.POPULAR}"/>
						<fx:Object label="имя" data="{ParamType.NAME}"/>
					</mx:ArrayCollection>
				</mx:ComboBox>
				<input:InputText id="paramValue" maxChars="30" width="60"/>
				<button:GameButton label="установить" click="setParam(event)"/>
				<button:GameButton label="удалить пользователя" click="deleteUser(event)"/>
			</s:HGroup>
			<s:HGroup>
				<button:GameButton label="+ модератор" click="setModerator(event)"/>
				<button:GameButton label="- модератор" click="deleteModerator(event)"/>				
			</s:HGroup>
			<s:HGroup width="100%">				
				<input:InputText id="notification" width="100%" height="21"/>
				<button:GameButton label="отправить уведомление" click="sendNotification(event)"/>
			</s:HGroup>
			<button:GameButton label="обновить параметры пользователей" click="onUpdateAllUsers(event)"/>
			<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Label fontSize="14" width="100%" textAlign="center" color="0xffffff" text="Список возможных читеров:"
						 visible="{GameApplication.app.models.cheaters.length > 0}"
						 includeInLayout="{GameApplication.app.models.cheaters.length > 0}"/>
				<s:List id="bodyList" height="100%" width="100%"
						contentBackgroundAlpha="0" borderVisible="false"
						visible="{GameApplication.app.models.cheaters.length > 0}"
						includeInLayout="{GameApplication.app.models.cheaters.length > 0}"
						dataProvider="{GameApplication.app.models.cheaters}"
						itemRenderer="application.gamecontainer.scene.admin.CheaterItemRenderer">
					<s:layout>
						<s:VerticalLayout gap="5"/>
					</s:layout>
				</s:List>
				<s:Label fontSize="12" width="100%" textAlign="center" color="0xcccccc" text="Список читеров пуст..."
						 visible="{GameApplication.app.models.cheaters.length == 0}"
						 includeInLayout="{GameApplication.app.models.cheaters.length == 0}"/>
			</s:VGroup>
		</s:VGroup>
		<s:HGroup width="100%" horizontalAlign="right">
			<button:GameButton id="back" label="назад" click="onBack(event)"/>
		</s:HGroup>
	</s:VGroup>
</s:Group>