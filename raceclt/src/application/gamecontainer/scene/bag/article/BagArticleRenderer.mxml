<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" rollOver="itemrenderer1_rollOverHandler(event)" rollOut="itemrenderer1_rollOutHandler(event)"
				xmlns:s="library://ns.adobe.com/flex/spark" buttonMode="true" implements="utils.managers.tooltip.IToolTiped"
				xmlns:mx="library://ns.adobe.com/flex/mx" click="onClick(event)"
				autoDrawBackground="false" xmlns:article="application.gamecontainer.scene.catalog.article.*">

	<fx:Script>
		<![CDATA[
			import application.GameApplication;
			import application.gamecontainer.chat.actionmenu.bagarticle.ActionMenuBagArticle;
			
			import utils.managers.tooltip.ToolTipType;
			import utils.models.item.Item;
			import utils.models.item.ItemPresent;
			
			public var tooltiptitle:String;
			public var tooltipdescription:String;
			
			override public function set data(value:Object):void{
				super.data = value;
				
				var item:Item = value as Item;
				if(item){
					article.init(item);	
					this.tooltiptitle = item.title;
					if(item is ItemPresent){
						this.tooltipdescription = "отправитель: " + (item as ItemPresent).presenter;
					}else{
						if(item.description && item.description.length){
							this.tooltipdescription = item.description;
						}
					}
				}				
			}
			
			protected function itemrenderer1_rollOverHandler(event:MouseEvent):void
			{
				if(!selected)
					article.currentState = "over";				
			}
			
			
			protected function itemrenderer1_rollOutHandler(event:MouseEvent):void
			{
				if(!selected)
					article.currentState = "normal";
			}
			
			public function get toolTipDelay() : int {
				return 400;
			}
			
			public function get toolTipDX() : int {
				return 10;
			}
			
			public function get toolTipDY() : int {
				return 2;
			}
			
			public function get toolTipType() : int {				
				return ToolTipType.TITLEANDDESCRIPTION;
			}
			
			protected function onClick(event:MouseEvent):void
			{
				var item:Item = data as Item;
				if(item){
					GameApplication.app.actionShowerMenu.showMenu(new ActionMenuBagArticle(item));
				}
			}
		]]>
	</fx:Script>
	<article:Article id="article"/>	
</s:ItemRenderer>
